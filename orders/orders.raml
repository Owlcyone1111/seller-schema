#%RAML 0.8

title: Orders
description: The Orders API provides information on how to utilize all API methods to fulfill an order placed on Jet.com.  General information about this API can be found in the API Explanation tab under the Orders section.
baseUri: http://merchant-api.test.jet.com/api
version: v0.1
protocols: [HTTPS]
mediaType: application/json

/orders:
    /{status}:
        get:
            description: This method will provide order links by the status of the order.  The order status available to poll are "Created" - when an order is newly created but is not ready to be fulfilled (this should only be used to reserve inventory, ignore if you do not reserve inventory), "Ready" - when an order is ready to be fulfilled by merchant, "directCancelled" - Jet.com is requesting the merchant to cancel the order details capture after requresting the link provided in this API call 
            responses:
                200:
                    body:
                        application/json:
                            schema: !include order-links.schema.json
                            example: !include order-links.example.json
                404:
                    description: The requested resource could not be found.
    /withShipmentDetail/{id}:
        get:
            description: This method will list all orders that have not been acknowledged with details about how Jet.com expects the items to be shipped. (This should only be used when it is agreed between the merchant and Jet.com that Jet.com will provide exact shipping information including tracking number)
            responses:
                200:
                    body:
                        application/json:
                            schema: !include order.schema.json
                            example: !include order.example.json
                404:
    /withoutShipmentDetail/{id}:
        get:
            description: This method will list all orders that have not been acknowledged without details about how Jet.com expects the order to be shipped. (This is the default order schema)
            responses:
                200:
                    body:
                        application/json:
                            schema: !include order-only.schema.json
                            example: !include order-only.example.json
                404:   
    /directedCancel:
        get:
            description: This method will be used by a merchant to poll for orders that Jet.com is requesting to be cancelled.  
            responses:
                200: 
                    body: 
                        application/json:
                            schema: !include order-cancelLinks.schema.json
                            example: !include order-cancelLinks.example.json
                404:
                    description: The requested resource could not be found. 
    /{id}:
        /acknowledge:
            put:
                description: This method allows the merchant to acknowledge an order as either accepted or rejected.  When acknowledging an order, each item in the order should have an advice to tell Jet.com whether the item was fulfillable or unfulfillable.   If any single item in the order is unfulfillable, then the entire order should be rejected and sent back to Jet.com. 
                body:
                    application/json:
                        schema: !include order-acknowledgement.schema.json
                        example: !include order-acknowledgement.example.json
                responses:
                    200:
                    404:
                    409:
        /shipped:
            put:
                description: This method notifies Jet.com that the order has been shipped.  The merchant should provide advice to let Jet.com know how many units have been shipped and/or voided, and all information to track the order for each shipment that the order may split into.
                body:
                    application/json:
                        schema: !include order-shippedNotification.schema.json
                        example: !include order-shippedNotification.example.json
                responses:
                    200:
                    404:
                    409:        