{
	"title": "returnAcknowldegement",
	"type": "object",
	"additionalProperties" : false,
	"description": "This schema is used to inform the Merchant of a Return",
	"properties": {
		"refund_without_return" : {
			"type":"boolean",
			"description" : "If this is true jet has deemed that this item should not be returned but the customer still should be refunded"
		},
		"order_id": {
			"type": "string",
			"required": true,
			"description": "Jet's unique ID for a given merchant order"
		},		
		"alt_order_id": {
			"type": "string",
			"required": true,
			"description": "Optional Merchant supplied order ID that should have been established in OrderAcknowledgement in order to use in this message

			#Logic

			Jet will provide this field if it has been established"
		},	
		"return_date": {
			"type": "string",
			"required": true,
			"description": "The date that the customer requested a return authorization

			#Valid Values

            The UTC time as follows 'yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffff''Z' for example 5PM eastern daylight time on Jan 1st 2015 would be '2015-01-01T21:00:00.0000000Z'"
		},
		"return_merchant_SKU": {
			"type": "array",
			"items":{
				   	"order_item_id": {
                    	"type": "string",
                    	"required" : true,
                    	"description" : "Jet's unique identifier for an item in a merchant order"
                	},
                	
                	"alt_order_item_id": {
                    	"type": "string",
                    	"description" : "Required if returning/refunding an item. If an alt_order_item_id has been associated with the order_item_id via the order accept message this may be passed instead of the order_item_id field.

                    	#Logic

                    	Jet will provide this field if it has been established"
               		},
				   	"merchant_sku":{
				   		"type":"string",
				   		"description":"the 'merchant_sku' that is being returned"
				   	},
				   	"merchant_sku_title":{
				   		"type":"string",
				   		"description":"The short description of the 'merchant_sku' that is being returned"
				   	},
				   	"return_quantity":{
				   		"type":"integer",
				   		"required": true,
				   		"description":"the quantity of the given 'merchant_sku' that is being returned"
				   	},
				   	"reason":{
				   		"type":"string",
				   		"required": true,
				   		"emum":[
				   				"no longer need/want",
				   				"better price available",
				   				"unauthorized purchase",
				   				"missed estimated delivery date (package never arrived)",
				   				"missed estimated delivery date (package arrived)",
				   				"different from what was ordered",
				   				"different from website description",
				   				"missing parts or accessories",
				   				"shipping box not damaged BUT item is damaged",
				   				"shipping box is damaged AND item is damaaged",
				   				"defective/does no work properly",
				   				"accidental order"],
				   		"description":"the reason provided by the customer for the return

				   		#Valid Values

				   		*'no longer need/want

				   		*'better price available'

				   		*'missed estimated delivery date (package never arrived)'

				   		*'missed estimated delivery date (package arrived)'

				   		*'different from what was ordered'

				   		*'different from website description'

				   		*'missing parts or accessories'

				   		*'shipping box not damaged BUT item is damaged'

				   		*'shipping box is damaged AND item is damaged'

				   		*'defective/does not work properly'

				   		*'accidental order'

				   		*'unauthorized purchase'"
				   	},
				   	"requested_refund_amount" : {
                	"title" : "price_adjustment",
                	"type" : "object",
                	"additionalProperties" : false,
                    "properties" : {
                		"principal" : {
                			"type" : "number",
                			"description" : "Amount to be refunded for the given item in USD associated with the item itself. This should be the total cost for this item not the unit cost."
                		},
                		"tax" : {
                			"type" : "number",
                			"description" : "Amount to be refunded for the given item in USD associated with tax that was charged for the item and "
                		},
                		"shipping_cost" : {
                			"type" : "number",
                			"description" : "Amount to be refunded for the given item in USD associated with the shipping cost that was allocated to this item"
                		},
                		"shipping_tax" : {
                			"type" : "number",
                			"description" : "Amount to be refunded for the given item in USD associated with the tax that was charged on shipping"
                		}
                	}
                }
				}
		},		
		"shipping_carrier": {
			"type": "string",
			"description": "Shipping method used for the given return shipment

			#Logic

			This will be populated with the carrier Jet has chosen if Jet is paying for the return shipping label.  
			If the merchant pays for the return shipping label, the carrier that merchant uses for returns will be populated"	
		},
		"tracking_number": {
			"type": "string",
			"description": "tracking number for the given return shipment

			#Logic

			This will be populated with the tracking number of the return shipment"	
		},
		"merchant_return_charge": {
			"type": "number",
			"description": "The charge that the merchant is required to pay jet for the return

			#Logic

			This is populated with the charge that a merchant will pay jet for a customer return"	
		}		
	}
}